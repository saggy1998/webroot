name: VectorDB Sync

on:
  # Run when a PR is merged into main
  pull_request:
    types: [closed]
    branches:
      - main
    paths:
      - 'src/**'
      - 'scripts/**'
      - 'data/**'
      - 'requirements.txt'
      - '.gitmodules'
      - '**/*.py'
      - '**/*.js'
      - '**/*.rs'
      - 'CLAUDE.md'

  # Run on direct pushes to main branch
  push:
    branches:
      - main
    paths:
      - 'src/**'
      - 'scripts/**'
      - 'data/**'
      - 'requirements.txt'
      - '.gitmodules'
      - '**/*.py'
      - '**/*.js'
      - '**/*.rs'
      - 'CLAUDE.md'

jobs:
  sync:
    # For PR: only if merged into main
    if: |
      (github.event_name == 'pull_request' && github.event.pull_request.merged == true) ||
      (github.event_name == 'push' && github.ref == 'refs/heads/main')
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo with submodules
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: recursive

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          set -e
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Detect changed files (root + submodules)
        run: |
          set -e  # fail on errors

          echo "ðŸ”Ž Detecting changes..."

          if [ "${{ github.event_name }}" == "push" ]; then
            echo "Push to main branch detected"
            base_sha="${{ github.event.before }}"
            head_sha="${{ github.sha }}"
          else
            echo "Pull request merged into main detected"
            base_sha="${{ github.event.pull_request.base.sha }}"
            head_sha="${{ github.sha }}"
          fi

          echo "Comparing $base_sha â†’ $head_sha"
          git diff --name-status $base_sha $head_sha > changed_files.txt
          cat changed_files.txt

          echo "ðŸ”Ž Detecting submodule pointer changes..."
          git diff --submodule $base_sha $head_sha > submodule_changes.txt || true
          cat submodule_changes.txt

          echo "ðŸ”Ž Expanding submodule changes into file-level diffs..."
          while read -r line; do
            submodule=$(echo "$line" | awk '{print $1}')
            oldsha=$(echo "$line" | awk '{print $2}')
            newsha=$(echo "$line" | awk '{print $3}')
            if [ -n "$submodule" ] && [ -n "$oldsha" ] && [ -n "$newsha" ]; then
              echo "ðŸ“‚ Submodule: $submodule ($oldsha â†’ $newsha)"
              pushd $submodule > /dev/null
              git fetch origin $oldsha $newsha || true
              git diff --name-status $oldsha $newsha | sed "s|^|$submodule/|" >> ../changed_files.txt
              popd > /dev/null
            fi
          done < <(git diff --submodule $base_sha $head_sha | grep Submodule)

          echo "âœ… Final changed files list:"
          cat changed_files.txt

      - name: Skip notice if no changes
        if: hashFiles('changed_files.txt') == ''
        run: echo "âš¡ No relevant file changes detected â€” skipping VectorDB sync"

      - name: Run VectorDB Sync
        if: success() && hashFiles('changed_files.txt') != ''
        env:
          PINECONE_API_KEY: ${{ secrets.PINECONE_API_KEY }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        run: |
          echo "ðŸš€ Running VectorDB Sync (changes detected)"
          python scripts/sync_pinecone.py changed_files.txt